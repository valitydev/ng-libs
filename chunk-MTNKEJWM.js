var s=Object.create;var g=Object.defineProperty,t=Object.defineProperties,u=Object.getOwnPropertyDescriptor,v=Object.getOwnPropertyDescriptors,w=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,x=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;var o=a=>{throw TypeError(a)};var m=(a,b,c)=>b in a?g(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,y=(a,b)=>{for(var c in b||={})k.call(b,c)&&m(a,c,b[c]);if(h)for(var c of h(b))n.call(b,c)&&m(a,c,b[c]);return a},z=(a,b)=>t(a,v(b));var A=(a=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(a,{get:(b,c)=>(typeof require<"u"?require:b)[c]}):a)(function(a){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+a+'" is not supported')});var B=(a,b)=>{var c={};for(var d in a)k.call(a,d)&&b.indexOf(d)<0&&(c[d]=a[d]);if(a!=null&&h)for(var d of h(a))b.indexOf(d)<0&&n.call(a,d)&&(c[d]=a[d]);return c};var C=(a,b)=>()=>(a&&(b=a(a=0)),b);var D=(a,b)=>()=>(b||a((b={exports:{}}).exports,b),b.exports),E=(a,b)=>{for(var c in b)g(a,c,{get:b[c],enumerable:!0})},p=(a,b,c,d)=>{if(b&&typeof b=="object"||typeof b=="function")for(let e of w(b))!k.call(a,e)&&e!==c&&g(a,e,{get:()=>b[e],enumerable:!(d=u(b,e))||d.enumerable});return a};var F=(a,b,c)=>(c=a!=null?s(x(a)):{},p(b||!a||!a.__esModule?g(c,"default",{value:a,enumerable:!0}):c,a)),G=a=>p(g({},"__esModule",{value:!0}),a);var l=(a,b,c)=>b.has(a)||o("Cannot "+c);var H=(a,b,c)=>(l(a,b,"read from private field"),c?c.call(a):b.get(a)),I=(a,b,c)=>b.has(a)?o("Cannot add the same private member more than once"):b instanceof WeakSet?b.add(a):b.set(a,c),J=(a,b,c,d)=>(l(a,b,"write to private field"),d?d.call(a,c):b.set(a,c),c),K=(a,b,c)=>(l(a,b,"access private method"),c);var L=(a,b,c)=>new Promise((d,e)=>{var q=f=>{try{i(c.next(f))}catch(j){e(j)}},r=f=>{try{i(c.throw(f))}catch(j){e(j)}},i=f=>f.done?d(f.value):Promise.resolve(f.value).then(q,r);i((c=c.apply(a,b)).next())});export{y as a,z as b,A as c,B as d,C as e,D as f,E as g,F as h,G as i,H as j,I as k,J as l,K as m,L as n};
