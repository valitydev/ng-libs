name: 'PR'

on:
  pull_request:
    branches: ['*']

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - uses: valitydev/action-frontend/setup@v0.1
      # - run: npm ci
      # - name: Check
      #   run: npm run check
      # - name: Build
      #   run: npm run build
      - run: echo ${{ steps.commit-and-push.outputs.commit_hash }}
      - run: echo ${{ steps.commit-and-push.outputs.commit_hash | cut -c1-7 }}
      # - name: Publish Angular Core
      #   working-directory: ./dist/ng-core
      #   run: npm version prerelease --preid pr-${{github.event.number}}-${{steps.vars.outputs.sha_short}} --no-git-tag-version && npm publish --tag pr
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Publish ESLint Config
      #   working-directory: ./projects/eslint-config
      #   run: npm version prerelease --preid pr-${{github.event.number}}-${{steps.vars.outputs.sha_short}} --no-git-tag-version && npm publish --tag pr
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Publish CSpell Config
      #   working-directory: ./projects/cspell-config
      #   run: npm version prerelease --preid pr-${{github.event.number}}-${{steps.vars.outputs.sha_short}} --no-git-tag-version && npm publish --tag pr
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Publish Prettier Config
      #   working-directory: ./projects/prettier-config
      #   run: npm version prerelease --preid pr-${{github.event.number}}-${{steps.vars.outputs.sha_short}} --no-git-tag-version && npm publish --tag pr
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
