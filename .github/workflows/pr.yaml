name: 'PR'

on:
  pull_request:
    branches: ['*']
  pull_request_target:
    types: ['labeled']

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    env:
      SHORT_SHA: $(echo "${{ github.event.pull_request.head.sha }}" | cut -c1-7)
    steps:
      - uses: actions/checkout@v4
      - uses: valitydev/action-frontend/setup@v1.0
      - run: npm ci
      - name: Check
        run: npm run check
      - name: Test
        run: npm run test:ci
      - name: Build
        run: npm run build
      - name: Extract labels
        id: labels
        run: |
          LABELS=$(github.context.payload.pull_request.labels)
          echo "::set-output name=value::$LABELS"
      - name: Publish Angular Core
        if: contains(steps.labels.outputs.value.*.name, 'publish') || contains(steps.labels.outputs.value.*.name, 'publish ng-core')
        working-directory: ./projects/ng-core/dist
        run: npm version prerelease --preid pr-${{ github.event.number }}-${{ env.SHORT_SHA }} --no-git-tag-version && npm publish --tag pr
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish ESLint Config
        if: contains(steps.labels.outputs.value.*.name, 'publish') || contains(steps.labels.outputs.value.*.name, 'publish eslint-config')
        working-directory: ./projects/eslint-config
        run: npm version prerelease --preid pr-${{ github.event.number }}-${{ env.SHORT_SHA }} --no-git-tag-version && npm publish --tag pr
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish CSpell Config
        if: contains(steps.labels.outputs.value.*.name, 'publish') || contains(steps.labels.outputs.value.*.name, 'publish cspell-config')
        working-directory: ./projects/cspell-config
        run: npm version prerelease --preid pr-${{ github.event.number }}-${{ env.SHORT_SHA }} --no-git-tag-version && npm publish --tag pr
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish Prettier Config
        if: contains(steps.labels.outputs.value.*.name, 'publish') || contains(steps.labels.outputs.value.*.name, 'publish prettier-config')
        working-directory: ./projects/prettier-config
        run: npm version prerelease --preid pr-${{ github.event.number }}-${{ env.SHORT_SHA }} --no-git-tag-version && npm publish --tag pr
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
